* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.container {
  display: flex;
  flex-direction: column;
  width: 90%;
  margin: 0 auto;
}

.controls {
  text-align: center;
}

.control {
  display: inline-block;
  min-width: 300px;
  margin-top: 20px;
  margin-left: 3px;
  margin-right: 3px;
}

.control input {
  border: 1px solid #e9e9e9;
  padding:.75em
}

.control label, .control input {
  display: block;
}

label {
  font-family: Arial, Helvetica, sans-serif;
}

.result {
  text-align: center;
  margin-top: 20px;
  font-size: 22px;
}

.result b {
  font-weight: bold;
}

.table {
  table-layout: fixed;
  width: 100%;
  border-collapse: collapse;
  margin-top: 20px;
  border: 1px solid #e9e9e9;
}

.row + .row{
  border-top: 1px solid #e9e9e9;
}

.table .col {
  padding: .75em;
}

.col + .col {
  border-left: 1px solid #e9e9e9;
}

.table .active .col {
  border-color: inherit;
}

.table thead {
  font-weight: bold;
  border-bottom: 1px solid #e9e9e9;
}

:global(.a) {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  position: absolute !important;
  width: 1px;
  word-wrap: normal !important;
}

input[type=range] {
  -webkit-appearance: none;
  margin: 8px 0;
  width: 100%;
}
input[type=range]:focus {
  outline: none;
}
input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 14px;
  cursor: pointer;
  animate: 0.2s;
  background: hsl(145, 100%, 36%);
  border-radius:7px;
}
input[type=range]::-webkit-slider-thumb {
  border: 1px solid hsl(145, 100%, 36%);
  height: 24px;
  width: 24px;
  border-radius: 50%;
  background: #ffffff;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -4px;
}
input[type=range]:focus::-webkit-slider-runnable-track {
  background: hsl(145, 100%, 36%);
}
input[type=range]::-moz-range-track {
  width: 100%;
  height: 14px;
  cursor: pointer;
  animate: 0.2s;
  background: hsl(145, 100%, 36%);
  border-radius: 7px;
}
input[type=range]::-moz-range-thumb {
  border: 1px solid hsl(145, 100%, 36%);
  height: 24px;
  width: 24px;
  border-radius: 50%;
  background: #ffffff;
  cursor: pointer;
}
input[type=range]::-ms-track {
  width: 100%;
  height: 14px;
  cursor: pointer;
  animate: 0.2s;
  background: transparent;
  border-color: transparent;
  border-width: 14px 0;
  color: transparent;
}
input[type=range]::-ms-fill-lower {
  background: hsl(145, 100%, 36%);
  border-radius: 7px;
}
input[type=range]::-ms-fill-upper {
  background: hsl(145, 100%, 36%);
  border-radius: 7px;
}
input[type=range]::-ms-thumb {
  border: 1px solid hsl(145, 100%, 36%);
  height: 24px;
  width: 24px;
  border-radius: 50%;
  background: #ffffff;
  cursor: pointer;
}
input[type=range]:focus::-ms-fill-lower {
  background: hsl(145, 100%, 36%);
}
input[type=range]:focus::-ms-fill-upper {
  background: hsl(145, 100%, 36%);
}


/*RADIOBUTTONS*/
/* The container */
.container_radio {
    display: inline-block;
    position: relative;
    padding-top: 4px;
    padding-left: 34px;
    margin-bottom: 12px;
    margin-left: 24px;
    cursor: pointer;
    font-size: 14px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default radio button */
.container_radio input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom radio button */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 24px;
    width: 24px;
    background-color: #eee;
    border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container_radio:hover input ~ .checkmark {
    background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.container_radio input:checked ~ .checkmark {
    background-color: hsl(145, 100%, 36%);
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the indicator (dot/circle) when checked */
.container_radio input:checked ~ .checkmark:after {
    display: block;
}

/* Style the indicator (dot/circle) */
.container_radio .checkmark:after {
  top: 8px;
  left: 8px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
}



/* The container checkbox*/
.container_checkbox {
    display: inline-block;
    position: relative;
    margin-top: 16px;
    padding-left: 35px;
    padding-top: 3px;
    padding-bottom: 3px;
    cursor: pointer;
    font-size: 14px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.container_checkbox input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.checkbox {
    position: absolute;
    top: 0;
    left: 0;
    height: 20px;
    width: 20px;
    background-color: #eee;
}

/* On mouse-over, add a grey background color */
.container_checkbox:hover input ~ .checkbox {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container_checkbox input:checked ~ .checkbox {
    background-color: hsl(145, 100%, 36%);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkbox:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container_checkbox input:checked ~ .checkbox:after {
    display: block;
}

/* Style the checkmark/indicator */
.container_checkbox .checkbox:after {
    left: 7px;
    top: 3px;
    width: 4px;
    height: 8px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}